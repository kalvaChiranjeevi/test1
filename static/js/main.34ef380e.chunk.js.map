{"version":3,"sources":["logo.svg","component/Navbar/index.js","component/Header/index.js","component/Home/index.js","Colomns.js","component/Admin/index.js","component/User/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navabar","props","className","to","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Home","COLUMNS","accessor","Admin","mockdata","MOCK_DATA","useState","ob1","setOb1","columns","useMemo","data","tableInstance","useTable","initialState","pageSize","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","setGlobalFilter","page","state","canNextPage","canPreviousPage","nextPage","pageOptions","pageCount","gotoPage","previousPage","setPageSize","globalFilter","pageIndex","formControl","margin","minWidth","width","display","selectEmpty","marginTop","addButton","console","log","length","Paper","component","onSubmit","e","preventDefault","Button","onClick","obj2","name","code","InputBase","input","placeholder","inputProps","value","onChange","target","type","iconButton","Divider","divider","orientation","FormControl","InputLabel","id","Select","labelId","event","label","MenuItem","map","res","original","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","disabled","App","path","exact","User","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.34ef380e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style.css';\r\n\r\n/**\r\n* @author\r\n* @function Navabar\r\n**/\r\n\r\nconst Navabar = (props) => {\r\n\r\n   \r\n  return(\r\n    <div className=\"menu\">\r\n       \r\n        <NavLink  to=\"/admin\">admin</NavLink> \r\n    \r\n        <NavLink   to=\"/user\">user</NavLink>\r\n\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Navabar","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Navabar from '../Navbar';\r\nimport { Link } from '@material-ui/core';\r\n\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    \r\n  },\r\n}));\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  return(\r\n    <div className> \r\n    <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n      <Navabar />\r\n      \r\n      </Typography>\r\n     \r\n      \r\n    </Toolbar>\r\n  </AppBar></div>\r\n   )\r\n\r\n }\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from '../Header'\r\nimport Navabar from '../Navbar'\r\n\r\n/**\r\n* @author\r\n* @function Home\r\n**/\r\n\r\nconst Home = (props) => {\r\n  return(\r\n    <div>\r\n      <Header />\r\n        <h1>Home</h1>\r\n            <Navabar/>\r\n        </div>\r\n    \r\n   )\r\n\r\n }\r\n\r\nexport default Home","export const COLUMNS = [\r\n\r\n    \r\n    {\r\n        Header:'Country Name',\r\n        accessor:'name'\r\n    },\r\n    {\r\n        Header:'Code',\r\n        accessor:'code'\r\n    },\r\n]","import React,{useMemo,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MOCK_DATA from '../../MOCK_DATA.json';\r\nimport {COLUMNS} from '../../Colomns';\r\nimport { useTable, usePagination,useGlobalFilter } from 'react-table';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Header from '../Header';\r\nimport { Button } from '@material-ui/core';\r\n\r\n/**\r\n* @author\r\n* @function Admin\r\n**/\r\n\r\nconst Admin = (props) => {\r\n\r\n  const mockdata =MOCK_DATA\r\n\r\n  const [ob1, setOb1] = useState([...mockdata])\r\n\r\n  const columns = useMemo(()=> COLUMNS,[]);\r\n  const data = useMemo(()=>ob1,[ob1]);\r\n  \r\n\r\n  const tableInstance =useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageSize: 5 } \r\n    },\r\n    useGlobalFilter, // useGlobalFilter!\r\n    usePagination\r\n  );\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setGlobalFilter,\r\n    state,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize, globalFilter }\r\n  } = tableInstance\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 300,\r\n      width:300,\r\n      display:'flex',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    addButton:{\r\n      marginRight:\"10px\"\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setGlobalFilter(event.target.value);\r\n    \r\n  };\r\n\r\n\r\n  const add=()=>{\r\n    const obj2 = {\r\n    name:globalFilter,\r\n    code:'ca11'\r\n    }\r\n\r\n  setOb1([...ob1,obj2])\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {console.log( page.length)}\r\n    \r\n    <Header />\r\n    \r\n    <Paper component=\"form\" className={classes.root} onSubmit={(e)=>e.preventDefault()}>\r\n    {\r\n      \r\n      page.length!=0?\" \":<Button className={classes.addButton}  onClick={add} variant=\"contained\" color=\"primary\">\r\n  Add Country\r\n</Button>\r\n    }\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Item\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n      value= {globalFilter ||''} \r\n        onChange={e=>setGlobalFilter(e.target.value)}\r\n      />\r\n      <IconButton type=\"submit\"  className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n     \r\n    </Paper>\r\n    {/* <input\r\n      type=\"text\"\r\n      value={globalFilter || \"\"}\r\n      onChange={e => setGlobalFilter(e.target.value)}\r\n    /> */}\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={globalFilter || ''}\r\n          onChange={handleChange}\r\n          label=\"Age\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {\r\n            page.map(res=>{\r\n              return <MenuItem key={res.original.code} value={res.original.name}>{res.original.name}</MenuItem>\r\n            })\r\n          }\r\n          \r\n         \r\n        </Select>\r\n      </FormControl>\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>\r\n                {column.render(\"Header\")}\r\n                {/* Render the columns filter UI */}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n      { page.length!=0?  page.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return (\r\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                );\r\n              })}\r\n            </tr>\r\n          );\r\n        }):\"NO DATA FOUND\"}\r\n      </tbody>\r\n    </table>\r\n    <div className=\"pagination\">\r\n      \r\n      \r\n\r\n      <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n        {\"5 more\"}\r\n      </button>\r\n    </div>\r\n\r\n    <br />\r\n    \r\n  </>\r\n   )\r\n\r\n }\r\n\r\nexport default Admin","import React,{useMemo,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MOCK_DATA from '../../MOCK_DATA.json';\r\nimport {COLUMNS} from '../../Colomns';\r\nimport { useTable, usePagination,useGlobalFilter } from 'react-table';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Header from '../Header';\r\n\r\n/**\r\n* @author\r\n* @function Admin\r\n**/\r\n\r\nconst Admin = (props) => {\r\n\r\n  const mockdata =MOCK_DATA\r\n\r\n  const [ob1, setOb1] = useState([...mockdata])\r\n\r\n  const columns = useMemo(()=> COLUMNS,[]);\r\n  const data = useMemo(()=>ob1,[ob1]);\r\n  \r\n\r\n  const tableInstance =useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageSize: 5 } \r\n    },\r\n    useGlobalFilter, // useGlobalFilter!\r\n    usePagination\r\n  );\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setGlobalFilter,\r\n    state,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize, globalFilter }\r\n  } = tableInstance\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 300,\r\n      display:'flex',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    setGlobalFilter(event.target.value);\r\n    \r\n  };\r\n\r\n\r\n  const add=()=>{\r\n    const obj2 = {\r\n    name:globalFilter,\r\n    code:'ca11'\r\n    }\r\n\r\n  setOb1([...ob1,obj2])\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {console.log( page.length)}\r\n    {\r\n      \r\n      page.length!=0?\" \":null\r\n    }\r\n    <Header />\r\n    <Paper component=\"form\" className={classes.root} onSubmit={(e)=>e.preventDefault()}>\r\n      \r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Item\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n      value= {globalFilter ||''} \r\n        onChange={e=>setGlobalFilter(e.target.value)}\r\n      />\r\n      <IconButton type=\"submit\"  className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Divider className={classes.divider} orientation=\"vertical\" />\r\n     \r\n    </Paper>\r\n\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={globalFilter || ''}\r\n          onChange={handleChange}\r\n          label=\"Age\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {\r\n            page.map(res=>{\r\n              return <MenuItem key={res.original.code} value={res.original.name}>{res.original.name}</MenuItem>\r\n            })\r\n          }\r\n          \r\n         \r\n        </Select>\r\n      </FormControl>\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>\r\n                {column.render(\"Header\")}\r\n                {/* Render the columns filter UI */}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        { page.length!=0?  page.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return (\r\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                );\r\n              })}\r\n            </tr>\r\n          );\r\n        }):\"NO DATA FOUND\"}\r\n      </tbody>\r\n    </table>\r\n    <div className=\"pagination\">\r\n      \r\n      \r\n\r\n      <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n        {\"5 more\"}\r\n      </button>\r\n    </div>\r\n\r\n    <br />\r\n    \r\n  </>\r\n   )\r\n\r\n }\r\n\r\nexport default Admin","import React,{Suspense} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './component/Home';\nimport Admin from './component/Admin';\nimport User from './component/User';\n// import MouseTracker from './component/test1';\n// import Spinner from './component/Spinner/Spinner';\n\n// const Moustatrker = React.lazy(()=> import('./component/test1'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n     <Router>\n      \n       <Route path=\"/\" exact component={Home}/>\n       <Route path=\"/admin\" exact component={Admin}/>\n       <Route path=\"/user\" exact component={User}/>\n\n      \n     </Router>\n\n      {/* <Suspense fallback={<Spinner />}>\n        <Moustatrker/>\n      </Suspense> */}\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n \n    \n    <App />\n   \n  // </React.StrictMode>,\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}