[{"D:\\test1\\src\\index.js":"1","D:\\test1\\src\\App.js":"2","D:\\test1\\src\\reportWebVitals.js":"3","D:\\test1\\src\\component\\Home\\index.js":"4","D:\\test1\\src\\component\\Admin\\index.js":"5","D:\\test1\\src\\component\\User\\index.js":"6","D:\\test1\\src\\component\\Navbar\\index.js":"7","D:\\test1\\src\\Colomns.js":"8","D:\\test1\\src\\GlobaFilter.js":"9","D:\\test1\\src\\Globafilter.js":"10","D:\\test1\\src\\component\\test1\\index.js":"11"},{"size":495,"mtime":1609818492110,"results":"12","hashOfConfig":"13"},{"size":604,"mtime":1610094073912,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":254,"mtime":1609753502620,"results":"16","hashOfConfig":"13"},{"size":166,"mtime":1609753902819,"results":"17","hashOfConfig":"13"},{"size":11247,"mtime":1609849200530,"results":"18","hashOfConfig":"13"},{"size":481,"mtime":1609753432551,"results":"19","hashOfConfig":"13"},{"size":169,"mtime":1609817831833,"results":"20","hashOfConfig":"13"},{"size":307,"mtime":1609820913620,"results":"21","hashOfConfig":"13"},{"size":307,"mtime":1609820913620,"results":"22","hashOfConfig":"13"},{"size":1436,"mtime":1610096533205,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"huymwo",{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\test1\\src\\index.js",[],["48","49"],"D:\\test1\\src\\App.js",["50","51","52","53","54","55"],"D:\\test1\\src\\reportWebVitals.js",[],"D:\\test1\\src\\component\\Home\\index.js",[],"D:\\test1\\src\\component\\Admin\\index.js",[],"D:\\test1\\src\\component\\User\\index.js",["56","57","58","59"],"import React ,{useMemo, useState,useEffect}from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {useTable,useGlobalFilter} from 'react-table';\r\n\r\nimport MOCK_DATA from '../../MOCK_DATA.json';\r\nimport {COLUMNS} from '../../Colomns';\r\nimport {Globalfilter} from '../../Globafilter';\r\n\r\n/**\r\n* @author\r\n* @function User\r\n**/\r\n\r\nconst User = (props) => {\r\n\r\n\r\n    const mockdata =MOCK_DATA\r\n\r\n  const [ob1, setOb1] = useState([...mockdata])\r\n\r\n  console.log('MOCK_DATA',mockdata);\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  console.log('addUser',ob1);\r\n  \r\n  const columns = useMemo(()=> COLUMNS,[]);\r\n  const data = useMemo(()=> ob1,[ob1]);\r\n\r\n  console.log(data)\r\n\r\n\r\n\r\n  const tableInstance = useTable({\r\n      columns,\r\n      data,\r\n      \r\n  },useGlobalFilter);\r\n  const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n      globalFilteredRows,\r\n      state,\r\n        setGlobalFilter,\r\n\r\n    } = tableInstance;\r\n\r\n    const {globalFilter}= state\r\n  \r\n    console.log('global filter:',tableInstance);\r\n    console.log('globalFilteredRows:', globalFilteredRows.length\r\n    );\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n  const classes = useStyles();\r\n  const [error, setError] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setGlobalFilter(event.target.value);\r\n    \r\n  };\r\n\r\n  \r\n  const add=()=>{\r\n    const obj2 = {\r\n    name:\"hello\",\r\n    code:'ca1'\r\n    }\r\n\r\n  setOb1([...ob1,obj2])\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <button onClick={add}>add</button>\r\n      <Globalfilter filter={globalFilter }  setFilter={setGlobalFilter} />\r\n      <br/>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={globalFilter || ''}\r\n          onChange={handleChange}\r\n          label=\"Age\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {\r\n            data.map(res=>{\r\n              return <MenuItem key={res.code} value={res.name}>{res.name}</MenuItem>\r\n            })\r\n          }\r\n          \r\n         \r\n        </Select>\r\n      </FormControl>\r\n      \r\n   <table {...getTableProps()}>\r\n   <thead>\r\n     {// Loop over the header rows\r\n     headerGroups.map(headerGroup => (\r\n       // Apply the header row props\r\n       <tr {...headerGroup.getHeaderGroupProps()}>\r\n         {// Loop over the headers in each row\r\n         headerGroup.headers.map(column => (\r\n           // Apply the header cell props\r\n           <th {...column.getHeaderProps()}>\r\n             {// Render the header\r\n             column.render('Header')}\r\n           </th>\r\n         ))}\r\n       </tr>\r\n     ))}\r\n   </thead>\r\n   {/* Apply the table body props */}\r\n   {\r\n      globalFilteredRows.length!==0? <tbody {...getTableBodyProps()}>\r\n      {// Loop over the table rows\r\n      rows.map(row => {\r\n        // Prepare the row for display\r\n        prepareRow(row)\r\n       \r\n        return (\r\n          // Apply the row props\r\n          <tr {...row.getRowProps()}>\r\n            {// Loop over the rows cells\r\n            row.cells.map(cell => {\r\n              // Apply the cell props\r\n              return (\r\n                \r\n                <td {...cell.getCellProps()}>\r\n                \r\n                  {// Render the cell contents\r\n                  \r\n                  cell.render('Cell')}\r\n                </td>\r\n              )\r\n            })}\r\n          </tr>\r\n        )\r\n      })}\r\n    </tbody>:<tbody><tr><td>No rows Found</td></tr></tbody>\r\n\r\n   }\r\n  \r\n </table>\r\n \r\n\r\n    \r\n\r\n  \r\n\r\n      {/* <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={age}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-helper-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-helper-label\"\r\n          id=\"demo-simple-select-helper\"\r\n          value={age}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Without label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-placeholder-label-label\"\r\n          id=\"demo-simple-select-placeholder-label\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel id=\"demo-simple-select-disabled-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-disabled-label\"\r\n          id=\"demo-simple-select-disabled\"\r\n          value={age}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel id=\"demo-simple-select-error-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-error-label\"\r\n          id=\"demo-simple-select-error\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          renderValue={(value) => `⚠️  - ${value}`}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-readonly-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-readonly-label\"\r\n          id=\"demo-simple-select-readonly\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          inputProps={{ readOnly: true }}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Read only</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-autowidth-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-autowidth-label\"\r\n          id=\"demo-simple-select-autowidth\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          autoWidth\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Auto width</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            Placeholder\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-required-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-required-label\"\r\n          id=\"demo-simple-select-required\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      \r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={age}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl> */}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default User\r\n\r\n\r\n","D:\\test1\\src\\component\\Navbar\\index.js",[],"D:\\test1\\src\\Colomns.js",[],"D:\\test1\\src\\GlobaFilter.js",[],"D:\\test1\\src\\Globafilter.js",[],"D:\\test1\\src\\component\\test1\\index.js",["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":3,"column":26,"nodeType":"68","messageId":"69","endLine":3,"endColumn":32},{"ruleId":"66","severity":1,"message":"71","line":3,"column":34,"nodeType":"68","messageId":"69","endLine":3,"endColumn":39},{"ruleId":"66","severity":1,"message":"72","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":12},{"ruleId":"66","severity":1,"message":"73","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},{"ruleId":"66","severity":1,"message":"74","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":12},{"ruleId":"66","severity":1,"message":"75","line":1,"column":34,"nodeType":"68","messageId":"69","endLine":1,"endColumn":43},{"ruleId":"66","severity":1,"message":"76","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":22},{"ruleId":"66","severity":1,"message":"77","line":76,"column":10,"nodeType":"68","messageId":"69","endLine":76,"endColumn":15},{"ruleId":"66","severity":1,"message":"78","line":76,"column":17,"nodeType":"68","messageId":"69","endLine":76,"endColumn":25},{"ruleId":"66","severity":1,"message":"79","line":1,"column":15,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":13,"column":9,"nodeType":"82","endLine":13,"endColumn":89},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Home' is defined but never used.","'Admin' is defined but never used.","'User' is defined but never used.","'useEffect' is defined but never used.","'FormHelperText' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]